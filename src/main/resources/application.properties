## DB 설정 (hikari CP란?)
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
## 스프링의 데이터 소스를 가지고옴, jdbc url을 가져옴
#spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@127.0.0.1:1521:xe
## 사용자 이름
#spring.datasource.hikari.username=hr
## 패스워드
#spring.datasource.hikari.password=spring
## DB에 접속해 있는 동안 반응이 없는지
#spring.datasource.hikari.connection-timeout=10000
## VALIDATION에 대해 타임아웃되는 시간
#spring.datasource.hikari.validation-timeout=10000
## 접속했으면 테스트 쿼리를 날려 확인하는 용도
#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL


###############################
# DB 설정 (log출력)
###############################
#드라이버 바꿔줌, logback, db관련된 얘들을 로그로 뽑기위해
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# 스프링의 데이터 소스를 가지고옴, jdbc url을 가져옴
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:xe
# 사용자 이름
spring.datasource.hikari.username=hr
# 패스워드
spring.datasource.hikari.password=spring
# DB에 접속해 있는 동안 반응이 없는지
spring.datasource.hikari.connection-timeout=10000
# VALIDATION에 대해 타임아웃되는 시간
spring.datasource.hikari.validation-timeout=10000
# 접속했으면 테스트 쿼리를 날려 확인하는 용도
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

################################
#포트번호 변경
###################################
server.port=18080


#############################
## 표기번 설정 - My batis
#############################
#_랑 carmel의 대소문자를 자동으로 매핑하도록 설정
mybatis.configuration.map-underscore-to-camel-case=true

spring.thymeleaf.cache=false
spring.resources.cache.period=0

############################
## SQL 로그 설정
###########################\
#logging.level.org.hibernate


#############################
## JPA 설정
#############################
##자동으로 처리할 DDL 종류 선택
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_commnets=true

##사용할 db선택 - 오라클 선택
spring.jpa.database = oracle
spring.jpa.database-platform = org.hibernate.dialect.Oracle10gDialect
#spring.jpa.database-platform = org.hibernate.dialect.MySQL5InnoDBDialect

##JPA엔티티 연관관계를 바탕으로 테이블 생성과 같은 스크립트를 자동으로 실행
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.show_sql=true

##SQL 로그 설명
logging.level.org.hibernate.type.descriptor.sql = trace

## 하이버네이트의 새로운 id생성 옵션의 사용 여부 설정
spring.jpa.hibernate.use-new-id-generator-mappings=false
